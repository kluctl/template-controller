//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppliedResourceInfo) DeepCopyInto(out *AppliedResourceInfo) {
	*out = *in
	out.Ref = in.Ref
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppliedResourceInfo.
func (in *AppliedResourceInfo) DeepCopy() *AppliedResourceInfo {
	if in == nil {
		return nil
	}
	out := new(AppliedResourceInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommentSourceSpec) DeepCopyInto(out *CommentSourceSpec) {
	*out = *in
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = new(string)
		**out = **in
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = new(ConfigMapRef)
		**out = **in
	}
	if in.TextTemplate != nil {
		in, out := &in.TextTemplate, &out.TextTemplate
		*out = new(LocalObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommentSourceSpec.
func (in *CommentSourceSpec) DeepCopy() *CommentSourceSpec {
	if in == nil {
		return nil
	}
	out := new(CommentSourceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommentSpec) DeepCopyInto(out *CommentSpec) {
	*out = *in
	if in.CommentId != nil {
		in, out := &in.CommentId, &out.CommentId
		*out = new(string)
		**out = **in
	}
	in.Source.DeepCopyInto(&out.Source)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommentSpec.
func (in *CommentSpec) DeepCopy() *CommentSpec {
	if in == nil {
		return nil
	}
	out := new(CommentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMapRef) DeepCopyInto(out *ConfigMapRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMapRef.
func (in *ConfigMapRef) DeepCopy() *ConfigMapRef {
	if in == nil {
		return nil
	}
	out := new(ConfigMapRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitFile) DeepCopyInto(out *GitFile) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitFile.
func (in *GitFile) DeepCopy() *GitFile {
	if in == nil {
		return nil
	}
	out := new(GitFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitProjector) DeepCopyInto(out *GitProjector) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitProjector.
func (in *GitProjector) DeepCopy() *GitProjector {
	if in == nil {
		return nil
	}
	out := new(GitProjector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GitProjector) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitProjectorList) DeepCopyInto(out *GitProjectorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GitProjector, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitProjectorList.
func (in *GitProjectorList) DeepCopy() *GitProjectorList {
	if in == nil {
		return nil
	}
	out := new(GitProjectorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GitProjectorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitProjectorResult) DeepCopyInto(out *GitProjectorResult) {
	*out = *in
	out.Reference = in.Reference
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = make([]GitProjectorResultFile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitProjectorResult.
func (in *GitProjectorResult) DeepCopy() *GitProjectorResult {
	if in == nil {
		return nil
	}
	out := new(GitProjectorResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitProjectorResultFile) DeepCopyInto(out *GitProjectorResultFile) {
	*out = *in
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = new(string)
		**out = **in
	}
	if in.Parsed != nil {
		in, out := &in.Parsed, &out.Parsed
		*out = make([]*runtime.RawExtension, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(runtime.RawExtension)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitProjectorResultFile.
func (in *GitProjectorResultFile) DeepCopy() *GitProjectorResultFile {
	if in == nil {
		return nil
	}
	out := new(GitProjectorResultFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitProjectorSpec) DeepCopyInto(out *GitProjectorSpec) {
	*out = *in
	out.Interval = in.Interval
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(GitRef)
		**out = **in
	}
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = make([]GitFile, len(*in))
		copy(*out, *in)
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(LocalObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitProjectorSpec.
func (in *GitProjectorSpec) DeepCopy() *GitProjectorSpec {
	if in == nil {
		return nil
	}
	out := new(GitProjectorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitProjectorStatus) DeepCopyInto(out *GitProjectorStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Result != nil {
		in, out := &in.Result, &out.Result
		*out = make([]GitProjectorResult, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitProjectorStatus.
func (in *GitProjectorStatus) DeepCopy() *GitProjectorStatus {
	if in == nil {
		return nil
	}
	out := new(GitProjectorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRef) DeepCopyInto(out *GitRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRef.
func (in *GitRef) DeepCopy() *GitRef {
	if in == nil {
		return nil
	}
	out := new(GitRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubProject) DeepCopyInto(out *GithubProject) {
	*out = *in
	if in.TokenRef != nil {
		in, out := &in.TokenRef, &out.TokenRef
		*out = new(SecretRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubProject.
func (in *GithubProject) DeepCopy() *GithubProject {
	if in == nil {
		return nil
	}
	out := new(GithubProject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubPullRequestRef) DeepCopyInto(out *GithubPullRequestRef) {
	*out = *in
	in.GithubProject.DeepCopyInto(&out.GithubProject)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubPullRequestRef.
func (in *GithubPullRequestRef) DeepCopy() *GithubPullRequestRef {
	if in == nil {
		return nil
	}
	out := new(GithubPullRequestRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitlabComment) DeepCopyInto(out *GitlabComment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitlabComment.
func (in *GitlabComment) DeepCopy() *GitlabComment {
	if in == nil {
		return nil
	}
	out := new(GitlabComment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GitlabComment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitlabCommentList) DeepCopyInto(out *GitlabCommentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GitlabComment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitlabCommentList.
func (in *GitlabCommentList) DeepCopy() *GitlabCommentList {
	if in == nil {
		return nil
	}
	out := new(GitlabCommentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GitlabCommentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitlabCommentSpec) DeepCopyInto(out *GitlabCommentSpec) {
	*out = *in
	in.GitlabMergeRequestRef.DeepCopyInto(&out.GitlabMergeRequestRef)
	in.CommentSpec.DeepCopyInto(&out.CommentSpec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitlabCommentSpec.
func (in *GitlabCommentSpec) DeepCopy() *GitlabCommentSpec {
	if in == nil {
		return nil
	}
	out := new(GitlabCommentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitlabCommentStatus) DeepCopyInto(out *GitlabCommentStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitlabCommentStatus.
func (in *GitlabCommentStatus) DeepCopy() *GitlabCommentStatus {
	if in == nil {
		return nil
	}
	out := new(GitlabCommentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitlabMergeRequestRef) DeepCopyInto(out *GitlabMergeRequestRef) {
	*out = *in
	in.GitlabProject.DeepCopyInto(&out.GitlabProject)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitlabMergeRequestRef.
func (in *GitlabMergeRequestRef) DeepCopy() *GitlabMergeRequestRef {
	if in == nil {
		return nil
	}
	out := new(GitlabMergeRequestRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitlabProject) DeepCopyInto(out *GitlabProject) {
	*out = *in
	if in.API != nil {
		in, out := &in.API, &out.API
		*out = new(string)
		**out = **in
	}
	if in.TokenRef != nil {
		in, out := &in.TokenRef, &out.TokenRef
		*out = new(SecretRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitlabProject.
func (in *GitlabProject) DeepCopy() *GitlabProject {
	if in == nil {
		return nil
	}
	out := new(GitlabProject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Handler) DeepCopyInto(out *Handler) {
	*out = *in
	if in.PullRequestComment != nil {
		in, out := &in.PullRequestComment, &out.PullRequestComment
		*out = new(PullRequestCommentReporter)
		(*in).DeepCopyInto(*out)
	}
	if in.PullRequestApprove != nil {
		in, out := &in.PullRequestApprove, &out.PullRequestApprove
		*out = new(PullRequestApproveReporter)
		(*in).DeepCopyInto(*out)
	}
	if in.PullRequestCommand != nil {
		in, out := &in.PullRequestCommand, &out.PullRequestCommand
		*out = new(PullRequestCommandHandler)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Handler.
func (in *Handler) DeepCopy() *Handler {
	if in == nil {
		return nil
	}
	out := new(Handler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HandlerStatus) DeepCopyInto(out *HandlerStatus) {
	*out = *in
	if in.PullRequestComment != nil {
		in, out := &in.PullRequestComment, &out.PullRequestComment
		*out = new(PullRequestCommentReporterStatus)
		**out = **in
	}
	if in.PullRequestApprove != nil {
		in, out := &in.PullRequestApprove, &out.PullRequestApprove
		*out = new(PullRequestApproveReporterStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.PullRequestCommand != nil {
		in, out := &in.PullRequestCommand, &out.PullRequestCommand
		*out = new(PullRequestCommandHandlerStatus)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HandlerStatus.
func (in *HandlerStatus) DeepCopy() *HandlerStatus {
	if in == nil {
		return nil
	}
	out := new(HandlerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListGithubPullRequests) DeepCopyInto(out *ListGithubPullRequests) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListGithubPullRequests.
func (in *ListGithubPullRequests) DeepCopy() *ListGithubPullRequests {
	if in == nil {
		return nil
	}
	out := new(ListGithubPullRequests)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListGithubPullRequests) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListGithubPullRequestsList) DeepCopyInto(out *ListGithubPullRequestsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ListGithubPullRequests, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListGithubPullRequestsList.
func (in *ListGithubPullRequestsList) DeepCopy() *ListGithubPullRequestsList {
	if in == nil {
		return nil
	}
	out := new(ListGithubPullRequestsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListGithubPullRequestsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListGithubPullRequestsSpec) DeepCopyInto(out *ListGithubPullRequestsSpec) {
	*out = *in
	out.Interval = in.Interval
	in.GithubProject.DeepCopyInto(&out.GithubProject)
	if in.Head != nil {
		in, out := &in.Head, &out.Head
		*out = new(string)
		**out = **in
	}
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListGithubPullRequestsSpec.
func (in *ListGithubPullRequestsSpec) DeepCopy() *ListGithubPullRequestsSpec {
	if in == nil {
		return nil
	}
	out := new(ListGithubPullRequestsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListGithubPullRequestsStatus) DeepCopyInto(out *ListGithubPullRequestsStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PullRequests != nil {
		in, out := &in.PullRequests, &out.PullRequests
		*out = make([]runtime.RawExtension, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListGithubPullRequestsStatus.
func (in *ListGithubPullRequestsStatus) DeepCopy() *ListGithubPullRequestsStatus {
	if in == nil {
		return nil
	}
	out := new(ListGithubPullRequestsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListGitlabMergeRequests) DeepCopyInto(out *ListGitlabMergeRequests) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListGitlabMergeRequests.
func (in *ListGitlabMergeRequests) DeepCopy() *ListGitlabMergeRequests {
	if in == nil {
		return nil
	}
	out := new(ListGitlabMergeRequests)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListGitlabMergeRequests) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListGitlabMergeRequestsList) DeepCopyInto(out *ListGitlabMergeRequestsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ListGitlabMergeRequests, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListGitlabMergeRequestsList.
func (in *ListGitlabMergeRequestsList) DeepCopy() *ListGitlabMergeRequestsList {
	if in == nil {
		return nil
	}
	out := new(ListGitlabMergeRequestsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListGitlabMergeRequestsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListGitlabMergeRequestsSpec) DeepCopyInto(out *ListGitlabMergeRequestsSpec) {
	*out = *in
	out.Interval = in.Interval
	in.GitlabProject.DeepCopyInto(&out.GitlabProject)
	if in.TargetBranch != nil {
		in, out := &in.TargetBranch, &out.TargetBranch
		*out = new(string)
		**out = **in
	}
	if in.SourceBranch != nil {
		in, out := &in.SourceBranch, &out.SourceBranch
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListGitlabMergeRequestsSpec.
func (in *ListGitlabMergeRequestsSpec) DeepCopy() *ListGitlabMergeRequestsSpec {
	if in == nil {
		return nil
	}
	out := new(ListGitlabMergeRequestsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListGitlabMergeRequestsStatus) DeepCopyInto(out *ListGitlabMergeRequestsStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MergeRequests != nil {
		in, out := &in.MergeRequests, &out.MergeRequests
		*out = make([]runtime.RawExtension, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListGitlabMergeRequestsStatus.
func (in *ListGitlabMergeRequestsStatus) DeepCopy() *ListGitlabMergeRequestsStatus {
	if in == nil {
		return nil
	}
	out := new(ListGitlabMergeRequestsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalObjectReference) DeepCopyInto(out *LocalObjectReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalObjectReference.
func (in *LocalObjectReference) DeepCopy() *LocalObjectReference {
	if in == nil {
		return nil
	}
	out := new(LocalObjectReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatrixEntry) DeepCopyInto(out *MatrixEntry) {
	*out = *in
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = new(MatrixEntryObject)
		(*in).DeepCopyInto(*out)
	}
	if in.List != nil {
		in, out := &in.List, &out.List
		*out = make([]runtime.RawExtension, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatrixEntry.
func (in *MatrixEntry) DeepCopy() *MatrixEntry {
	if in == nil {
		return nil
	}
	out := new(MatrixEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatrixEntryObject) DeepCopyInto(out *MatrixEntryObject) {
	*out = *in
	out.Ref = in.Ref
	if in.JsonPath != nil {
		in, out := &in.JsonPath, &out.JsonPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatrixEntryObject.
func (in *MatrixEntryObject) DeepCopy() *MatrixEntryObject {
	if in == nil {
		return nil
	}
	out := new(MatrixEntryObject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectHandler) DeepCopyInto(out *ObjectHandler) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectHandler.
func (in *ObjectHandler) DeepCopy() *ObjectHandler {
	if in == nil {
		return nil
	}
	out := new(ObjectHandler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ObjectHandler) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectHandlerList) DeepCopyInto(out *ObjectHandlerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ObjectHandler, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectHandlerList.
func (in *ObjectHandlerList) DeepCopy() *ObjectHandlerList {
	if in == nil {
		return nil
	}
	out := new(ObjectHandlerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ObjectHandlerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectHandlerSpec) DeepCopyInto(out *ObjectHandlerSpec) {
	*out = *in
	out.Interval = in.Interval
	out.ForObject = in.ForObject
	if in.Handlers != nil {
		in, out := &in.Handlers, &out.Handlers
		*out = make([]Handler, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectHandlerSpec.
func (in *ObjectHandlerSpec) DeepCopy() *ObjectHandlerSpec {
	if in == nil {
		return nil
	}
	out := new(ObjectHandlerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectHandlerStatus) DeepCopyInto(out *ObjectHandlerStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HandlerStatus != nil {
		in, out := &in.HandlerStatus, &out.HandlerStatus
		*out = make([]*HandlerStatus, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(HandlerStatus)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectHandlerStatus.
func (in *ObjectHandlerStatus) DeepCopy() *ObjectHandlerStatus {
	if in == nil {
		return nil
	}
	out := new(ObjectHandlerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectRef) DeepCopyInto(out *ObjectRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectRef.
func (in *ObjectRef) DeepCopy() *ObjectRef {
	if in == nil {
		return nil
	}
	out := new(ObjectRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectTemplate) DeepCopyInto(out *ObjectTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectTemplate.
func (in *ObjectTemplate) DeepCopy() *ObjectTemplate {
	if in == nil {
		return nil
	}
	out := new(ObjectTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ObjectTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectTemplateList) DeepCopyInto(out *ObjectTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ObjectTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectTemplateList.
func (in *ObjectTemplateList) DeepCopy() *ObjectTemplateList {
	if in == nil {
		return nil
	}
	out := new(ObjectTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ObjectTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectTemplateSpec) DeepCopyInto(out *ObjectTemplateSpec) {
	*out = *in
	out.Interval = in.Interval
	if in.Matrix != nil {
		in, out := &in.Matrix, &out.Matrix
		*out = make([]*MatrixEntry, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MatrixEntry)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Templates != nil {
		in, out := &in.Templates, &out.Templates
		*out = make([]Template, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectTemplateSpec.
func (in *ObjectTemplateSpec) DeepCopy() *ObjectTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(ObjectTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectTemplateStatus) DeepCopyInto(out *ObjectTemplateStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AppliedResources != nil {
		in, out := &in.AppliedResources, &out.AppliedResources
		*out = make([]AppliedResourceInfo, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectTemplateStatus.
func (in *ObjectTemplateStatus) DeepCopy() *ObjectTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(ObjectTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestApproveReporter) DeepCopyInto(out *PullRequestApproveReporter) {
	*out = *in
	in.PullRequestRefHolder.DeepCopyInto(&out.PullRequestRefHolder)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestApproveReporter.
func (in *PullRequestApproveReporter) DeepCopy() *PullRequestApproveReporter {
	if in == nil {
		return nil
	}
	out := new(PullRequestApproveReporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestApproveReporterStatus) DeepCopyInto(out *PullRequestApproveReporterStatus) {
	*out = *in
	if in.Approved != nil {
		in, out := &in.Approved, &out.Approved
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestApproveReporterStatus.
func (in *PullRequestApproveReporterStatus) DeepCopy() *PullRequestApproveReporterStatus {
	if in == nil {
		return nil
	}
	out := new(PullRequestApproveReporterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestCommandHandler) DeepCopyInto(out *PullRequestCommandHandler) {
	*out = *in
	in.PullRequestRefHolder.DeepCopyInto(&out.PullRequestRefHolder)
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]PullRequestCommandHandlerCommandSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestCommandHandler.
func (in *PullRequestCommandHandler) DeepCopy() *PullRequestCommandHandler {
	if in == nil {
		return nil
	}
	out := new(PullRequestCommandHandler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestCommandHandlerActionAnnotateSpec) DeepCopyInto(out *PullRequestCommandHandlerActionAnnotateSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestCommandHandlerActionAnnotateSpec.
func (in *PullRequestCommandHandlerActionAnnotateSpec) DeepCopy() *PullRequestCommandHandlerActionAnnotateSpec {
	if in == nil {
		return nil
	}
	out := new(PullRequestCommandHandlerActionAnnotateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestCommandHandlerActionSpec) DeepCopyInto(out *PullRequestCommandHandlerActionSpec) {
	*out = *in
	if in.Annotate != nil {
		in, out := &in.Annotate, &out.Annotate
		*out = new(PullRequestCommandHandlerActionAnnotateSpec)
		**out = **in
	}
	if in.JsonPatch != nil {
		in, out := &in.JsonPatch, &out.JsonPatch
		*out = new([]runtime.RawExtension)
		if **in != nil {
			in, out := *in, *out
			*out = make([]runtime.RawExtension, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestCommandHandlerActionSpec.
func (in *PullRequestCommandHandlerActionSpec) DeepCopy() *PullRequestCommandHandlerActionSpec {
	if in == nil {
		return nil
	}
	out := new(PullRequestCommandHandlerActionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestCommandHandlerCommandSpec) DeepCopyInto(out *PullRequestCommandHandlerCommandSpec) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]PullRequestCommandHandlerActionSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestCommandHandlerCommandSpec.
func (in *PullRequestCommandHandlerCommandSpec) DeepCopy() *PullRequestCommandHandlerCommandSpec {
	if in == nil {
		return nil
	}
	out := new(PullRequestCommandHandlerCommandSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestCommandHandlerStatus) DeepCopyInto(out *PullRequestCommandHandlerStatus) {
	*out = *in
	if in.LastProcessedCommentTime != nil {
		in, out := &in.LastProcessedCommentTime, &out.LastProcessedCommentTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestCommandHandlerStatus.
func (in *PullRequestCommandHandlerStatus) DeepCopy() *PullRequestCommandHandlerStatus {
	if in == nil {
		return nil
	}
	out := new(PullRequestCommandHandlerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestCommentReporter) DeepCopyInto(out *PullRequestCommentReporter) {
	*out = *in
	in.PullRequestRefHolder.DeepCopyInto(&out.PullRequestRefHolder)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestCommentReporter.
func (in *PullRequestCommentReporter) DeepCopy() *PullRequestCommentReporter {
	if in == nil {
		return nil
	}
	out := new(PullRequestCommentReporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestCommentReporterStatus) DeepCopyInto(out *PullRequestCommentReporterStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestCommentReporterStatus.
func (in *PullRequestCommentReporterStatus) DeepCopy() *PullRequestCommentReporterStatus {
	if in == nil {
		return nil
	}
	out := new(PullRequestCommentReporterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestRefHolder) DeepCopyInto(out *PullRequestRefHolder) {
	*out = *in
	if in.Gitlab != nil {
		in, out := &in.Gitlab, &out.Gitlab
		*out = new(GitlabMergeRequestRef)
		(*in).DeepCopyInto(*out)
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = new(GithubPullRequestRef)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestRefHolder.
func (in *PullRequestRefHolder) DeepCopy() *PullRequestRefHolder {
	if in == nil {
		return nil
	}
	out := new(PullRequestRefHolder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretRef) DeepCopyInto(out *SecretRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretRef.
func (in *SecretRef) DeepCopy() *SecretRef {
	if in == nil {
		return nil
	}
	out := new(SecretRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Template) DeepCopyInto(out *Template) {
	*out = *in
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = (*in).DeepCopy()
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Template.
func (in *Template) DeepCopy() *Template {
	if in == nil {
		return nil
	}
	out := new(Template)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateRef) DeepCopyInto(out *TemplateRef) {
	*out = *in
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = new(TemplateRefConfigMap)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateRef.
func (in *TemplateRef) DeepCopy() *TemplateRef {
	if in == nil {
		return nil
	}
	out := new(TemplateRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateRefConfigMap) DeepCopyInto(out *TemplateRefConfigMap) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateRefConfigMap.
func (in *TemplateRefConfigMap) DeepCopy() *TemplateRefConfigMap {
	if in == nil {
		return nil
	}
	out := new(TemplateRefConfigMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextTemplate) DeepCopyInto(out *TextTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextTemplate.
func (in *TextTemplate) DeepCopy() *TextTemplate {
	if in == nil {
		return nil
	}
	out := new(TextTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TextTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextTemplateInput) DeepCopyInto(out *TextTemplateInput) {
	*out = *in
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = new(TextTemplateInputObject)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextTemplateInput.
func (in *TextTemplateInput) DeepCopy() *TextTemplateInput {
	if in == nil {
		return nil
	}
	out := new(TextTemplateInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextTemplateInputObject) DeepCopyInto(out *TextTemplateInputObject) {
	*out = *in
	out.Ref = in.Ref
	if in.JsonPath != nil {
		in, out := &in.JsonPath, &out.JsonPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextTemplateInputObject.
func (in *TextTemplateInputObject) DeepCopy() *TextTemplateInputObject {
	if in == nil {
		return nil
	}
	out := new(TextTemplateInputObject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextTemplateList) DeepCopyInto(out *TextTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TextTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextTemplateList.
func (in *TextTemplateList) DeepCopy() *TextTemplateList {
	if in == nil {
		return nil
	}
	out := new(TextTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TextTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextTemplateSpec) DeepCopyInto(out *TextTemplateSpec) {
	*out = *in
	if in.Inputs != nil {
		in, out := &in.Inputs, &out.Inputs
		*out = make([]*TextTemplateInput, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TextTemplateInput)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(string)
		**out = **in
	}
	if in.TemplateRef != nil {
		in, out := &in.TemplateRef, &out.TemplateRef
		*out = new(TemplateRef)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextTemplateSpec.
func (in *TextTemplateSpec) DeepCopy() *TextTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(TextTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextTemplateStatus) DeepCopyInto(out *TextTemplateStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextTemplateStatus.
func (in *TextTemplateStatus) DeepCopy() *TextTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(TextTemplateStatus)
	in.DeepCopyInto(out)
	return out
}
